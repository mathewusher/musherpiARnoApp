
## Project Communication Log: Oculus Quest XR TTS App

### Overview
This document reconstructs the full context and progression of interactions related to the development of a native Android Oculus Quest application featuring passthrough AR capabilities, OpenXR integration, and a TTS (Text-to-Speech) network service.

---

### Technical Goals
1. **Passthrough Mixed Reality** using Oculus/Meta Quest's camera features.
2. **OpenXR + OpenGL ES 3.1** rendering engine for immersive visualization.
3. **TTS Server Integration**, using cURL for HTTP network communication.
4. **Android Native Build Support**, CMake, Gradle, and NDK compatibility.

---

### Key Configuration Files
- **`AndroidManifest.xml`**:
  - Declared requirements for `android.hardware.vr.headtracking`, `com.oculus.experimental.enabled`, and `com.oculus.feature.PASSTHROUGH`.
  - NativeActivity is configured with OpenGL ES 3.1 and OpenXR categories.

- **`CMakeLists.txt`**:
  - Enables OpenGL ES 3.0 debugging via `ENABLE_GLES3_DEBUG=1`.
  - Includes source directories and third-party dependencies like stb, minizip, curl.
  - Sets up `android_native_app_glue` and defines shared library `xrpassthrough`.

- **`assembledebug.txt`**:
  - Captures detailed build logs.
  - Shows OpenGL debug symbol issues, missing identifiers, and warnings related to struct layout and `offsetof`.

---

### Custom Source Files Observed
- `GLES3Loader.cpp/h`: Intended to dynamically load OpenGL ES 3 KHR debug functions.
- `Engine.cpp/h`: Responsible for application initialization; attempts to call `LoadGLES3Symbols()`.
- `Global.h`, `XrPassthroughGl.cpp`: Contain rendering logic, possibly for rendering passthrough layers.
- `Piarno.h`: Contains references to overlay opacity and MIDI or AR-related GUI elements.

---

### Build Observations
- Linkage includes:
  - `log`, `android`, `GLESv3`, `EGL`
  - Native glue and OpenXR loader.
  - Custom static libraries: `samplecommon`, `samplexrframework`, `curl`.

- Issues encountered:
  - Undeclared GL KHR symbols (`PFNGLDEBUGMESSAGECALLBACKKHRPROC`).
  - Compilation halted at symbol resolution in GLES3Loader.
  - Use of `offsetof` on non-standard-layout types generates warnings.

---

### GPT Integration Updates
- Initial configuration focused on VR and AI-powered music applications.
- Added recognition for TTS server using cURL.
- Prompt starters updated to reflect real-world developer tasks (TTS, debugging, optimization).

---

### Development Focus Summary
- Setting up OpenXR and OpenGL ES 3 passthrough rendering pipeline.
- Debug support via `KHR_debug`.
- TTS service integration via HTTP using cURL.
- Handling Android build issues in NDK (Gradle + CMake).
- Managing native libraries and error handling.

---

Generated by rivmusica on 2025-07-29
